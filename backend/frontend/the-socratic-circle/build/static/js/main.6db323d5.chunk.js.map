{"version":3,"sources":["logo.svg","components/feed/post.jsx","components/feed/feed.jsx","components/navbar.jsx","components/panel.jsx","components/trending-tab/trendingTab.jsx","components/login.jsx","components/register.jsx","components/submit.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Post","props","getCircleElements","circles","circlesElements","key","circlesData","hasOwnProperty","includes","tempStyle","push","style","tag","state","ETHICS","SOPHISM","METAPHYSICS","RELIGION","MORTALITY","this","data","className","title","user","body","map","circle","i","to","points","Component","Feed","posts","post","Navbar","console","log","loginButtonMsg","loginLink","loginText","loggedIn","userData","name","id","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","onLogout","pathname","Panel","loading","redirect","msg","logout","e","preventDefault","localStorage","removeItem","setState","token","getItem","axios","get","headers","Authorization","response","jwt_decode","header","Fragment","Login","email","password","error","handleChange","event","target","value","handleSubmit","a","res","setItem","onSubmit","placeholder","onChange","role","Register","password2","class","Submit","circle1","circle2","circle3","circleNames","location","rows","withRouter","App","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6db323d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.circlesData = {\n      ETHICS: [\"Ethics\", \"badge-success\"],\n      SOPHISM: [\"Sophism\", \"badge-danger\"],\n      METAPHYSICS: [\"Metaphysics\", \"badge-warning\"],\n      RELIGION: [\"Religion\", \"badge-info\"],\n      MORTALITY: [\"Mortality\", \"badge-dark\"]\n    };\n  }\n\n  getCircleElements = circles => {\n    let circlesElements = [];\n    let commonStyle = \"badge circle \";\n\n    for (let key in this.circlesData) {\n      if (this.circlesData.hasOwnProperty(key)) {\n        if (circles.includes(key)) {\n          let tempStyle = commonStyle + this.circlesData[key][1];\n          circlesElements.push({\n            style: tempStyle,\n            tag: this.circlesData[key][0]\n          });\n        }\n      }\n    }\n\n    return circlesElements;\n  };\n\n  render() {\n    let circlesElements = this.getCircleElements(this.props.data.circles);\n\n    return (\n      <div className=\"card post view-component\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{this.props.data.title}</h5>\n          <h6 className=\"card-subtitle mb-2 post-subtitle\">\n            {this.props.data.user}\n          </h6>\n          <p className=\"card-text\">{this.props.data.body}</p>\n          <div className=\"d-flex justify-content-between\">\n            <div className=\"circle-container\">\n              {circlesElements.map((circle, i) => (\n                <Link to=\"/home\" className={circle.style} key={i}>\n                  {circle.tag}\n                </Link>\n              ))}\n            </div>\n            <div className=\"\">\n              <div className=\"post-points float-right\">\n                {this.props.data.points}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Post;\n","import React, { Component } from \"react\";\nimport Post from \"./post\";\n\nclass Feed extends Component {\n  state = {\n    posts: [\n      {\n        title: \"Socratic views on the meaning of life\",\n        user: \"Pranav Nair\",\n        body:\n          \"I'll just nod, I've never been so good at shaking hands\\n I live on the frozen surface of a fireball\\n Where cities come together to hate each other in the name of sport\\nAmerica, nothing is ever just anything\\nI looked up to you, but you thought I would look the other way\\nAnd you hear what you want to hear\\nAnd they take what they want to take\\nDon't be sad, won't ever happen like this anymore\",\n        circles: [\"SOPHISM\", \"METAPHYSICS\"],\n        points: 72\n      },\n      {\n        title: \"Bob Dylan is a poet\",\n        user: \"Neil Young\",\n        body:\n          \"Well it ain't no use to sit and wonder why, babe\\nIfin' you don't know by now\\nAn' it ain't no use to sit and wonder why, babe\\nIt'll never do some how\\nWhen your rooster crows at the break a dawn\\nLook out your window and I'll be gone\\nYou're the reason I'm trav'lin' on\\nDon't think twice, it's all right\",\n        circles: [\"MORTALITY\"],\n        points: 19\n      },\n      {\n        title: \"Socratic views on the meaning of life\",\n        user: \"Pranav Nair\",\n        body:\n          \"I'll just nod, I've never been so good at shaking hands\\n I live on the frozen surface of a fireball\\n Where cities come together to hate each other in the name of sport\\nAmerica, nothing is ever just anything\\nI looked up to you, but you thought I would look the other way\\nAnd you hear what you want to hear\\nAnd they take what they want to take\\nDon't be sad, won't ever happen like this anymore\",\n        circles: [\"RELIGION\", \"ETHICS\", \"SOPHISM\"],\n        points: 214\n      },\n      {\n        title: \"Socratic views on the meaning of life\",\n        user: \"Pranav Nair\",\n        body:\n          \"I'll just nod, I've never been so good at shaking hands\\n I live on the frozen surface of a fireball\\n Where cities come together to hate each other in the name of sport\\nAmerica, nothing is ever just anything\\nI looked up to you, but you thought I would look the other way\\nAnd you hear what you want to hear\\nAnd they take what they want to take\\nDon't be sad, won't ever happen like this anymore\",\n        circles: [\"RELIGION\", \"SOPHISM\"],\n        points: 753\n      }\n    ]\n  };\n\n  render() {\n    //   TODO: when re-adding TrendingTab, use colo-lg-9\n    return (\n      <div className=\"col-lg-12\">\n        {this.state.posts.map((post, i) => (\n          <Post data={post} key={i}></Post>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Feed;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  state = {};\n\n  render() {\n    console.log(this.props);\n\n    // Login message\n\n    let loginButtonMsg = \"Login\";\n    let loginLink = \"/login\";\n    let loginText = \"\";\n    if (this.props.loggedIn) {\n      loginButtonMsg = \"Logout\";\n      loginLink = \"/\";\n      loginText = this.props.userData.name + \" | \" + this.props.userData.points;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-md fixed-top navbar-light view-component\">\n        <Link to=\"/\">\n          <p\n            className=\"navbar-brand mb-0 navbar-font h1\"\n            id=\"navbar-title\"\n            // href=\"#\"\n          >\n            The Socratic Circle\n          </p>\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarTogglerDemo02\"\n          aria-controls=\"navbarTogglerDemo02\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n          {/* Just to move search to the right side */}\n          <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\" />\n\n          <form className=\"form-inline my-2 my-lg-0\">\n            {this.props.loggedIn && (\n              <label className=\"h6 navbar-font\">{loginText}</label>\n            )}\n            <Link to={loginLink}>\n              <button\n                className=\"btn btn-outline-primary my-2 my-sm-1 ml-2 navbar-font\"\n                type=\"submit\"\n                onClick={this.props.onLogout}\n              >\n                {loginButtonMsg}\n              </button>\n            </Link>\n            <Link\n              to={{\n                pathname: \"/submit\",\n                state: {\n                  loggedIn: this.props.loggedIn,\n                  userData: this.props.userData\n                }\n              }}\n            >\n              <button\n                className=\"btn btn-outline-primary my-2 my-sm-1 ml-2 navbar-font\"\n                type=\"submit\"\n              >\n                New Post\n              </button>\n            </Link>\n            <button\n              className=\"btn btn-outline-primary my-2 my-sm-1 ml-2 navbar-font\"\n              type=\"submit\"\n            >\n              Search\n            </button>\n          </form>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\";\n\nimport Feed from \"./feed/feed\";\nimport Navbar from \"./navbar\";\nimport TrendingTab from \"./trending-tab/trendingTab\";\n\nclass Panel extends Component {\n  state = {\n    loading: true,\n    user: null,\n    loggedIn: false,\n    redirect: false,\n    userData: null,\n    msg: \"\"\n  };\n\n  async componentDidMount() {\n    const token = localStorage.getItem(\"jwtToken\");\n    if (!token) {\n      this.setState({\n        loading: false,\n        loggedIn: false\n      });\n    } else if (this.state.loading) {\n      try {\n        const response = await axios.get(\"/api/protected\", {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        this.setState({\n          loading: false,\n          loggedIn: true,\n          user: jwt_decode(token, { header: true }),\n          userData: response.data.userData,\n          msg:\n            response.data.userData.name + \" | \" + response.data.userData.points\n        });\n      } catch (error) {\n        console.log(error);\n        this.setState({\n          loading: false,\n          loggedIn: true,\n          user: jwt_decode(token, { header: true }),\n          msg: \"The protected route failed :( Check console for errors\"\n        });\n      }\n    }\n  }\n\n  logout = e => {\n    if (this.state.loggedIn) {\n      e.preventDefault();\n      localStorage.removeItem(\"jwtToken\");\n      this.setState({ loggedIn: false, user: null, msg: \"\", userData: null });\n    }\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <React.Fragment>\n        <Navbar\n          onLogout={this.logout}\n          loggedIn={this.state.loggedIn}\n          userData={this.state.userData}\n        />\n        <div className=\"container-fluid panel\">\n          <div className=\"row\">\n            <Feed />\n            {/* <TrendingTab /> */}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Panel;\n","import React, { Component } from \"react\";\n\nclass TrendingTab extends Component {\n  state = {};\n  render() {\n    return <div className=\"col-lg-3\">Trending tab</div>;\n  }\n}\n\nexport default TrendingTab;\n","import React, { Component } from \"react\";\nimport Navbar from \"./navbar\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    loading: false,\n    loggedIn: false,\n    error: \"\"\n  };\n\n  componentDidMount() {\n    let token = localStorage.getItem(\"jwtToken\");\n    if (token) {\n      console.log(\"token\", token);\n      const decoded = jwt_decode(token);\n      if (decoded) {\n        this.setState({ loggedIn: true });\n      }\n    }\n  }\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    this.setState({ loading: true });\n\n    let userData = { email: this.state.email, password: this.state.password };\n\n    try {\n      const res = await axios.post(\"/api/login\", userData);\n\n      // Save to localStorage\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n\n      this.setState({ loading: false, loggedIn: true });\n    } catch (err) {\n      console.log(\"Incorrect login: \" + err);\n      this.setState({ loading: false, error: \"Login Failed\" });\n    }\n  };\n\n  render() {\n    if (this.state.loggedIn === true) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <React.Fragment>\n        <Navbar />\n        <div className=\"container-fluid form-container\">\n          <div className=\"card form view-component\">\n            <h3 className=\"text-center\">Login</h3>\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"form-group\">\n                <label className=\"form-label\">Email</label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  id=\"email\"\n                  value={this.state.email}\n                  placeholder=\"Enter email\"\n                  onChange={this.handleChange(\"email\")}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label className=\"form-label\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  value={this.state.password}\n                  id=\"exampleInputPassword1\"\n                  placeholder=\"Password\"\n                  onChange={this.handleChange(\"password\")}\n                />\n              </div>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <button type=\"submit\" className=\"btn btn-outline-primary\">\n                    Login\n                  </button>\n                </div>\n                <div className=\"col text-center\">\n                  <p className=\"text-right form-bottom-text\">\n                    <Link className=\"form-bottom-text\" to=\"/register\">\n                      Create Account\n                    </Link>\n                  </p>\n                </div>\n              </div>\n            </form>\n            {this.state.error && (\n              <div className=\"alert alert-primary form-alert\" role=\"alert\">\n                {this.state.error}\n              </div>\n            )}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport Navbar from \"./navbar\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\n\nclass Register extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n    loading: false,\n    error: \"\"\n  };\n\n  componentDidMount() {\n    let token = localStorage.getItem(\"jwtToken\");\n    if (token) {\n      console.log(\"token\", token);\n      console.log(token);\n      const decoded = jwt_decode(token);\n      if (decoded) {\n        this.setState({ loggedIn: true });\n      }\n    }\n  }\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    this.setState({ loading: true });\n\n    if (this.state.password != this.state.password2) {\n      this.setState({ loading: false, msg: \"Passwords don't match\" });\n    } else {\n      let userData = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password\n      };\n      console.log(userData);\n      try {\n        const res = await axios.post(\"/api/register\", userData);\n\n        this.setState({ loading: false, msg: \"Success\" });\n      } catch (err) {\n        console.log(err);\n        this.setState({ loading: false, msg: \"Registration Failed.\" });\n      }\n    }\n  };\n\n  render() {\n    if (this.state.msg == \"Success\") {\n      return <Redirect to=\"/login\" />;\n    }\n    return (\n      <React.Fragment>\n        <Navbar />\n        <div className=\"container-fluid form-container\">\n          <div className=\"card form view-component\">\n            <h3 className=\"text-center\">Create New Account</h3>\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"form-group\">\n                <label className=\"form-label\">Username</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"name\"\n                  placeholder=\"Username\"\n                  value={this.state.name}\n                  onChange={this.handleChange(\"name\")}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label className=\"form-label\">Email address</label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  id=\"email\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.handleChange(\"email\")}\n                />\n                <small id=\"emailHelp\" className=\"form-text text-muted\">\n                  We'll never share your email with anyone else.\n                </small>\n              </div>\n              <div className=\"form-group\">\n                <label className=\"form-label\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.handleChange(\"password\")}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label className=\"form-label\">Confirm Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"password2\"\n                  placeholder=\"Password\"\n                  value={this.state.password2}\n                  onChange={this.handleChange(\"password2\")}\n                />\n              </div>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <button type=\"submit\" className=\"btn btn-outline-primary\">\n                    Create Account\n                  </button>\n                </div>\n                <div className=\"col text-center\">\n                  <p className=\"text-right form-bottom-text\">\n                    <Link className=\"form-bottom-text\" to=\"/login\">\n                      Login\n                    </Link>\n                  </p>\n                </div>\n              </div>\n            </form>\n            {this.state.error && (\n              <div class=\"alert alert-primary form-alert\" role=\"alert\">\n                {this.state.error}\n              </div>\n            )}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from \"react\";\nimport { Redirect, Link, withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport Navbar from \"./navbar\";\n\nclass Submit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      user: \"\",\n      body: \"\",\n      circle1: \"-\",\n      circle2: \"-\",\n      circle3: \"-\",\n      error: \"\"\n    };\n\n    this.circleNames = [\n      \"-\",\n      \"Ethics\",\n      \"Sophism\",\n      \"Metaphysics\",\n      \"Religion\",\n      \"Mortality\"\n    ];\n  }\n\n  componentDidMount() {\n    if (this.props.location.state.loggedIn) {\n      this.setState({ user: this.props.location.state.userData.name });\n    }\n  }\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  // Convert \"-\" circle to null\n  handleSubmit = async event => {\n    event.preventDefault();\n    this.setState({ loading: true });\n\n    // if (this.state.password != this.state.password2) {\n    //   this.setState({ loading: false, msg: \"Passwords don't match\" });\n    // } else {\n    //   let userData = {\n    //     name: this.state.name,\n    //     email: this.state.email,\n    //     password: this.state.password\n    //   };\n    //   console.log(userData);\n    //   try {\n    //     const res = await axios.post(\"/api/register\", userData);\n\n    //     this.setState({ loading: false, msg: \"Success\" });\n    //   } catch (err) {\n    //     console.log(err);\n    //     this.setState({ loading: false, msg: \"Registration Failed.\" });\n    //   }\n    // }\n  };\n\n  render() {\n    console.log(this.state);\n    if (!this.props.location.state.loggedIn) {\n      return <Redirect to=\"/login\"></Redirect>;\n    }\n    return (\n      <React.Fragment>\n        <Navbar />\n        <div className=\"container-fluid form-container\">\n          <div className=\"card form view-component\">\n            <h3 className=\"text-center\">Submit Post</h3>\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"form-group\">\n                <label className=\"form-label\">Title</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"name\"\n                  placeholder=\"Title\"\n                  value={this.state.title}\n                  onChange={this.handleChange(\"title\")}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label className=\"form-label\">Text</label>\n                <textarea\n                  className=\"form-control\"\n                  id=\"email\"\n                  rows=\"10\"\n                  placeholder=\"Enter text\"\n                  value={this.state.body}\n                  onChange={this.handleChange(\"body\")}\n                />\n                <small id=\"emailHelp\" className=\"form-text text-muted\">\n                  (Optional)\n                </small>\n              </div>\n              <div className=\"form-select\">\n                <label className=\"form-label\">Circle 1</label>\n                <select\n                  className=\"form-control\"\n                  id=\"circle1\"\n                  value={this.state.circle1}\n                  onChange={this.handleChange(\"circle1\")}\n                >\n                  {this.circleNames.map((name, i) => (\n                    <option key={i}>{name}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-select\">\n                <label className=\"form-label\">Circle 2</label>\n                <select\n                  className=\"form-control\"\n                  id=\"circle2\"\n                  value={this.state.circle2}\n                  onChange={this.handleChange(\"circle2\")}\n                >\n                  {this.circleNames.map((name, i) => (\n                    <option key={i}>{name}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-select\">\n                <label className=\"form-label\">Circle 3</label>\n                <select\n                  className=\"form-control\"\n                  id=\"circle3\"\n                  value={this.state.circle3}\n                  onChange={this.handleChange(\"circle3\")}\n                >\n                  {this.circleNames.map((name, i) => (\n                    <option key={i}>{name}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <button type=\"submit\" className=\"btn btn-outline-primary\">\n                    Submit\n                  </button>\n                </div>\n                <div className=\"col text-center\">\n                  <p className=\"text-right form-bottom-text\">\n                    <Link className=\"form-bottom-text\" to=\"/\">\n                      Discard\n                    </Link>\n                  </p>\n                </div>\n              </div>\n            </form>\n            {this.state.error && (\n              <div class=\"alert alert-primary form-alert\" role=\"alert\">\n                {this.state.error}\n              </div>\n            )}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(Submit);\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Panel from \"./components/panel\";\nimport Login from \"./components/login\";\nimport Register from \"./components/register\";\nimport Submit from \"./components/submit\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\" component={Login}>\n          <Login />\n        </Route>\n        <Route path=\"/register\" component={Register}>\n          <Register />\n        </Route>\n        <Route path=\"/submit\" component={Submit}>\n          <Submit />\n        </Route>\n        <Route path=\"/\">\n          <Panel />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}